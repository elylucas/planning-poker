{"version":3,"sources":["../src/server.js"],"names":[],"mappings":";;;;;kBAIwB,WAAW;;;;;;;;;;;;;;AAApB,SAAS,WAAW,CAAC,KAAK,EAAC;AACxC,MAAM,EAAE,GAAG,sBAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAErC,IAAE,CAAC,GAAG,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC;AAC3C,IAAE,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,MAAM,EAAK;;AAE9B,UAAM,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,IAAI,EAAK;AAChC,UAAI,MAAM,GAAG,0BAAW,CAAC;AACzB,UAAI,MAAM,GAAG,0BAAW,CAAC;AACzB,aAAO,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC,CAAC;AACnC,WAAK,CAAC,QAAQ,CAAC,qBAbb,UAAU,EAac,MAAM,EAC5B,EAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAC,CACvE,CAAC,CAAC;AACH,YAAM,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAA;;AAE7B,UAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,IAAI,EAAI;AAC7C,eAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,MAAM,CAAA;OACjC,CAAC,CAAC;AACH,YAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;KACjC,CAAC,CAAC;;AAEH,UAAM,CAAC,EAAE,CAAC,UAAU,EAAE,UAAC,IAAI,EAAE,MAAM,EAAI;AACrC,aAAO,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;AACzB,UAAI,MAAM,GAAG,0BAAW,CAAC;AACzB,WAAK,CAAC,QAAQ,CAAC,qBA3BD,QAAQ,EA2BE,MAAM,EAC5B,EAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAC,CACrE,CAAC,CAAC;;AAEH,UAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,IAAI;eAAI,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,MAAM,CAAC;OAAA,CAAC,CAAC;AAC1E,YAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;KACjC,CAAC,CAAC;GAEJ,CAAC,CAAC;CACJ","file":"server.js","sourcesContent":["import Server from 'socket.io';\nimport {createRoom, joinRoom} from './action_creators';\nimport roomIdGen from './util/room-id-gen';\n\nexport default function startServer(store){\n  const io = new Server().attach(8090);\n\n  io.set('origins', 'http://localhost:8080');\n  io.on('connection', (socket) => {\n\n    socket.on('createRoom', (name) => {\n      let roomId = roomIdGen();\n      let userId = roomIdGen();\n      console.log(name + ' - ' + roomId);\n      store.dispatch(createRoom(roomId,\n          {id: userId, name: name, isSpectator: false, isAFK: false, vote: ''}\n      ));\n      socket.join('room-' + roomId)\n\n      var room = store.getState().rooms.find(room => {\n        return room.get('id') === roomId\n      });\n      socket.emit('joinedRoom', room);\n    });\n\n    socket.on('joinRoom', (name, roomId) =>{\n      console.log(name, roomId)\n      let userId = roomIdGen();\n      store.dispatch(joinRoom(roomId,\n        {id: userId, name: name, isSpectator: false, isAFK: false, vote: ''}\n      ));\n\n      var room = store.getState().rooms.find(room => room.get('id' === roomId));\n      socket.emit('joinedRoom', room);\n    });\n\n  });\n}\n"]}