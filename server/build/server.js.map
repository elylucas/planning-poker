{"version":3,"sources":["../src/server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["import Server from 'socket.io';\nimport {createRoom, joinRoom, leaveRoom, castVote, resetVote} from './action_creators';\nimport roomIdGen from './util/room-id-gen';\n\nexport default function startServer(store){\n  const io = new Server().attach(8090);\n\n  io.set('origins', 'http://localhost:8080');\n  io.on('connection', (socket) => {\n\n    socket.on('hello', (userId) => {\n      socket['userId'] = userId;\n      console.log(`UserId ${userId} connected`);\n    });\n\n    socket.on('createRoom', (name) => {\n      let roomId = roomIdGen();\n      let userId = socket['userId'];\n      console.log(name + ' - ' + roomId);\n      store.dispatch(createRoom(roomId,\n          {id: userId, name: name, isSpectator: false, isAFK: false, vote: ''}\n      ));\n      socket.join('room-' + roomId)\n      socket['roomId'] = roomId;\n\n      var room = store.getState().rooms.find(room => {\n        return room.get('id') === roomId\n      });\n      socket.emit('joinedRoom', room);\n    });\n\n    socket.on('joinRoom', (name, roomId) =>{\n      console.log(name, roomId)\n      let userId = socket['userId'];\n      store.dispatch(joinRoom(roomId,\n        {id: userId, name: name, isSpectator: false, isAFK: false, vote: ''}\n      ));\n\n      var room = store.getState().rooms.find(room => room.get('id') === roomId);\n      io.to('room-' + roomId).emit('roomUpdated', room)\n\n      socket['roomId'] = roomId;\n\n      socket.join('room-' + roomId);\n      socket.emit('joinedRoom', room);\n    });\n\n    socket.on('castVote', (vote, roomId) => {\n      console.log('vote ' + vote)\n      console.log('roomId ' + roomId)\n      store.dispatch(castVote(socket['userId'], roomId, vote));\n      let room = store.getState().rooms.find(room => room.get('id') === roomId);\n      io.to('room-' + roomId).emit('roomUpdated', room);\n    });\n\n    socket.on('resetVote', ()=>{\n      let roomId = socket['roomId'];\n      console.log('reseting votes for roomid ' + roomId);\n      store.dispatch(resetVote(roomId));\n      let room = store.getState().rooms.find(room => room.get('id') === roomId);\n      io.to('room-' + roomId).emit('voteReset', room);\n    })\n\n    socket.on('disconnect', ()=>{\n      var roomId = socket['roomId'];\n      if(!roomId){ return; }\n      console.log('user ' + socket['userId'] + ' disconnecting from room ' + roomId);\n      store.dispatch(leaveRoom(socket['roomId'], socket['userId']));\n      var room = store.getState().rooms.find(room => room.get('id') === roomId);\n      io.to('room-' + roomId).emit('roomUpdated', room)\n    });\n\n  });\n}\n"]}