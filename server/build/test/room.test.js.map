{"version":3,"sources":["../../src/test/room.test.js"],"names":[],"mappings":";;;;;;;;AAIA,QAAQ,CAAC,MAAM,EAAE,YAAU;;AAEzB,UAAQ,CAAC,YAAY,EAAE,YAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuE3B,CAAC,CAAC;CAEJ,CAAC,CAAC","file":"room.test.js","sourcesContent":["import {expect} from 'chai';\nimport {createRoom, joinRoom} from '../rooms';\nimport {Map, List, fromJS} from 'immutable';\n\ndescribe('Room', function(){\n\n  describe('createRoom', () =>{\n\n    // it('should add a room with roomId and user to state when called', ()=>{\n    //   const roomId = '1234';\n    //   const user = {\n    //     id: '1234',\n    //     name: 'Joe',\n    //     vote: null,\n    //     isSpectator: false,\n    //     isAfk: false\n    //   };\n    //   const initialState = Map();\n    //\n    //   let newState = createRoom(initialState, roomId, user);\n    //   var expected = {}\n    //   expected[roomId] = {\n    //     users[\n    //\n    //     ]\n    //   }\n    //   expect(newState).to.equal(fromJS({\n    //     roomId: roomId,\n    //     users: [\n    //       user\n    //     ]\n    //   }));\n    // });\n\n    // it('should add room to state that already has rooms', ()=>{\n    //   var state = List.of(Map({\n    //     roomId: 1234,\n    //     users: []\n    //   }));\n    //   const user = {\n    //     name: 'Joe',\n    //     sessionId: 'abc1234',\n    //     vote: null,\n    //     isSpectator: false,\n    //     isAfk: false\n    //   };\n    //   let newState = createRoom(state, '5678', user);\n    //\n    //   expect(newState.size).to.equal(2);\n    // });\n\n    // it('should join user to room when new user joins', ()=>{\n    //   const user = {\n    //     name: 'Joe',\n    //     sessionId: 'abc1234',\n    //     vote: null,\n    //     isSpectator: false,\n    //     isAfk: false\n    //   };\n    //   var state = List.of(Map({\n    //     roomId: 1234,\n    //     users: [ user ]\n    //   }));\n    //\n    //   const newUser = {\n    //     name: 'Matt',\n    //     sessionId: 'abc5678',\n    //     vote: null,\n    //     isSpectator: false,\n    //     isAfk: false\n    //   };\n    //\n    //   let newState = joinRoom(state, '5678', newUser);\n    //\n    //   expect(newState.)\n    // })\n\n  });\n\n});\n"]}